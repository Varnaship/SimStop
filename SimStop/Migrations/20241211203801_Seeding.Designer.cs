// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimStop.Data;

#nullable disable

namespace SimStop.Web.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241211203801_Seeding")]
    partial class Seeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("LocationId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            CategoryId = 1,
                            Description = "Racing wheel for PlayStation and PC.",
                            IsDeleted = false,
                            LocationId = 1,
                            Name = "Logitech G29",
                            Price = 299.99m,
                            ReleaseDate = new DateTime(2015, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 5.0
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 1,
                            CategoryId = 1,
                            Description = "Racing wheel for Xbox and PC.",
                            IsDeleted = false,
                            LocationId = 2,
                            Name = "Logitech G920",
                            Price = 299.99m,
                            ReleaseDate = new DateTime(2015, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 5.0
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 1,
                            CategoryId = 4,
                            Description = "High-performance pedals for sim racing.",
                            IsDeleted = false,
                            LocationId = 3,
                            Name = "Logitech G Pro Pedals",
                            Price = 349.99m,
                            ReleaseDate = new DateTime(2020, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 6.0
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 1,
                            CategoryId = 8,
                            Description = "H-pattern shifter for G29 and G920.",
                            IsDeleted = false,
                            LocationId = 4,
                            Name = "Logitech G Shifter",
                            Price = 59.99m,
                            ReleaseDate = new DateTime(2015, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 1.5
                        },
                        new
                        {
                            Id = 5,
                            BrandId = 1,
                            CategoryId = 1,
                            Description = "Racing wheel with TrueForce feedback.",
                            IsDeleted = false,
                            LocationId = 5,
                            Name = "Logitech G923",
                            Price = 399.99m,
                            ReleaseDate = new DateTime(2020, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 5.5
                        },
                        new
                        {
                            Id = 6,
                            BrandId = 2,
                            CategoryId = 1,
                            Description = "Racing wheel for PlayStation and PC.",
                            IsDeleted = false,
                            LocationId = 1,
                            Name = "Thrustmaster T300 RS",
                            Price = 399.99m,
                            ReleaseDate = new DateTime(2014, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 6.0
                        },
                        new
                        {
                            Id = 7,
                            BrandId = 2,
                            CategoryId = 1,
                            Description = "Racing wheel for Xbox and PC.",
                            IsDeleted = false,
                            LocationId = 2,
                            Name = "Thrustmaster TX",
                            Price = 399.99m,
                            ReleaseDate = new DateTime(2014, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 6.0
                        },
                        new
                        {
                            Id = 8,
                            BrandId = 2,
                            CategoryId = 5,
                            Description = "Loadcell pedals for sim racing.",
                            IsDeleted = false,
                            LocationId = 3,
                            Name = "Thrustmaster T-LCM Pedals",
                            Price = 199.99m,
                            ReleaseDate = new DateTime(2020, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 7.0
                        },
                        new
                        {
                            Id = 9,
                            BrandId = 2,
                            CategoryId = 8,
                            Description = "H-pattern and sequential shifter.",
                            IsDeleted = false,
                            LocationId = 4,
                            Name = "Thrustmaster TH8A Shifter",
                            Price = 149.99m,
                            ReleaseDate = new DateTime(2014, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 2.0
                        },
                        new
                        {
                            Id = 10,
                            BrandId = 2,
                            CategoryId = 1,
                            Description = "High-end racing wheel for PlayStation and PC.",
                            IsDeleted = false,
                            LocationId = 5,
                            Name = "Thrustmaster T-GT II",
                            Price = 799.99m,
                            ReleaseDate = new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 7.5
                        },
                        new
                        {
                            Id = 11,
                            BrandId = 3,
                            CategoryId = 1,
                            Description = "High-performance wheel for sim racing enthusiasts.",
                            IsDeleted = false,
                            LocationId = 1,
                            Name = "Fanatec CSL Elite Wheel",
                            Price = 499.99m,
                            ReleaseDate = new DateTime(2019, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 3.5
                        },
                        new
                        {
                            Id = 12,
                            BrandId = 3,
                            CategoryId = 4,
                            Description = "High-end pedals for sim racing.",
                            IsDeleted = false,
                            LocationId = 2,
                            Name = "Fanatec ClubSport Pedals V3",
                            Price = 359.99m,
                            ReleaseDate = new DateTime(2016, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 5.0
                        },
                        new
                        {
                            Id = 13,
                            BrandId = 3,
                            CategoryId = 6,
                            Description = "Direct-drive wheel base for sim racing.",
                            IsDeleted = false,
                            LocationId = 3,
                            Name = "Fanatec Podium Wheel Base DD1",
                            Price = 1199.99m,
                            ReleaseDate = new DateTime(2018, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 10.0
                        },
                        new
                        {
                            Id = 14,
                            BrandId = 3,
                            CategoryId = 8,
                            Description = "H-pattern and sequential shifter.",
                            IsDeleted = false,
                            LocationId = 4,
                            Name = "Fanatec ClubSport Shifter SQ V1.5",
                            Price = 259.99m,
                            ReleaseDate = new DateTime(2016, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 2.5
                        },
                        new
                        {
                            Id = 15,
                            BrandId = 3,
                            CategoryId = 6,
                            Description = "Compact direct-drive wheel base.",
                            IsDeleted = false,
                            LocationId = 5,
                            Name = "Fanatec CSL DD",
                            Price = 349.99m,
                            ReleaseDate = new DateTime(2021, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 4.0
                        },
                        new
                        {
                            Id = 16,
                            BrandId = 4,
                            CategoryId = 6,
                            Description = "High-end direct-drive wheel base.",
                            IsDeleted = false,
                            LocationId = 1,
                            Name = "Simucube 2 Pro",
                            Price = 1299.99m,
                            ReleaseDate = new DateTime(2019, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 8.0
                        },
                        new
                        {
                            Id = 17,
                            BrandId = 4,
                            CategoryId = 6,
                            Description = "Mid-range direct-drive wheel base.",
                            IsDeleted = false,
                            LocationId = 2,
                            Name = "Simucube 2 Sport",
                            Price = 899.99m,
                            ReleaseDate = new DateTime(2019, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 7.0
                        },
                        new
                        {
                            Id = 18,
                            BrandId = 4,
                            CategoryId = 6,
                            Description = "Top-of-the-line direct-drive wheel base.",
                            IsDeleted = false,
                            LocationId = 3,
                            Name = "Simucube 2 Ultimate",
                            Price = 2499.99m,
                            ReleaseDate = new DateTime(2019, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 9.0
                        },
                        new
                        {
                            Id = 19,
                            BrandId = 4,
                            CategoryId = 1,
                            Description = "Wireless steering wheel for Simucube.",
                            IsDeleted = false,
                            LocationId = 4,
                            Name = "Simucube Wireless Wheel",
                            Price = 499.99m,
                            ReleaseDate = new DateTime(2020, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 2.0
                        },
                        new
                        {
                            Id = 20,
                            BrandId = 4,
                            CategoryId = 4,
                            Description = "High-performance pedals for sim racing.",
                            IsDeleted = false,
                            LocationId = 5,
                            Name = "Simucube Pedals",
                            Price = 399.99m,
                            ReleaseDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 6.0
                        },
                        new
                        {
                            Id = 21,
                            BrandId = 5,
                            CategoryId = 1,
                            Description = "Racing simulator seat.",
                            IsDeleted = false,
                            LocationId = 1,
                            Name = "Playseat Evolution",
                            Price = 299.99m,
                            ReleaseDate = new DateTime(2015, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 15.0
                        },
                        new
                        {
                            Id = 22,
                            BrandId = 5,
                            CategoryId = 1,
                            Description = "Foldable racing simulator seat.",
                            IsDeleted = false,
                            LocationId = 2,
                            Name = "Playseat Challenge",
                            Price = 199.99m,
                            ReleaseDate = new DateTime(2016, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 10.0
                        },
                        new
                        {
                            Id = 23,
                            BrandId = 5,
                            CategoryId = 1,
                            Description = "High-end racing simulator seat.",
                            IsDeleted = false,
                            LocationId = 3,
                            Name = "Playseat Sensation Pro",
                            Price = 999.99m,
                            ReleaseDate = new DateTime(2018, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 20.0
                        },
                        new
                        {
                            Id = 24,
                            BrandId = 5,
                            CategoryId = 1,
                            Description = "Formula 1 racing simulator seat.",
                            IsDeleted = false,
                            LocationId = 4,
                            Name = "Playseat F1",
                            Price = 1199.99m,
                            ReleaseDate = new DateTime(2017, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 18.0
                        },
                        new
                        {
                            Id = 25,
                            BrandId = 5,
                            CategoryId = 1,
                            Description = "Flight simulator seat.",
                            IsDeleted = false,
                            LocationId = 5,
                            Name = "Playseat Air Force",
                            Price = 599.99m,
                            ReleaseDate = new DateTime(2019, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 16.0
                        },
                        new
                        {
                            Id = 26,
                            BrandId = 6,
                            CategoryId = 5,
                            Description = "High-end loadcell pedals for precise braking.",
                            IsDeleted = false,
                            LocationId = 1,
                            Name = "Heusinkveld Sprint Pedals",
                            Price = 899.99m,
                            ReleaseDate = new DateTime(2020, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 7.2000000000000002
                        },
                        new
                        {
                            Id = 27,
                            BrandId = 6,
                            CategoryId = 5,
                            Description = "Top-of-the-line loadcell pedals.",
                            IsDeleted = false,
                            LocationId = 2,
                            Name = "Heusinkveld Ultimate Pedals",
                            Price = 1199.99m,
                            ReleaseDate = new DateTime(2018, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 8.0
                        },
                        new
                        {
                            Id = 28,
                            BrandId = 6,
                            CategoryId = 5,
                            Description = "Entry-level loadcell pedals.",
                            IsDeleted = false,
                            LocationId = 3,
                            Name = "Heusinkveld Sim Pedals",
                            Price = 499.99m,
                            ReleaseDate = new DateTime(2017, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 6.0
                        },
                        new
                        {
                            Id = 29,
                            BrandId = 6,
                            CategoryId = 2,
                            Description = "Loadcell handbrake for sim racing.",
                            IsDeleted = false,
                            LocationId = 4,
                            Name = "Heusinkveld Handbrake",
                            Price = 299.99m,
                            ReleaseDate = new DateTime(2019, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 2.0
                        },
                        new
                        {
                            Id = 30,
                            BrandId = 6,
                            CategoryId = 7,
                            Description = "Loadcell sequential shifter.",
                            IsDeleted = false,
                            LocationId = 5,
                            Name = "Heusinkveld Sequential Shifter",
                            Price = 399.99m,
                            ReleaseDate = new DateTime(2021, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 3.0
                        },
                        new
                        {
                            Id = 31,
                            BrandId = 7,
                            CategoryId = 6,
                            Description = "Compact direct-drive wheel base with high torque.",
                            IsDeleted = false,
                            LocationId = 1,
                            Name = "Simagic Alpha Mini",
                            Price = 799.99m,
                            ReleaseDate = new DateTime(2022, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 6.7999999999999998
                        },
                        new
                        {
                            Id = 32,
                            BrandId = 7,
                            CategoryId = 6,
                            Description = "High-performance direct-drive wheel base.",
                            IsDeleted = false,
                            LocationId = 2,
                            Name = "Simagic Alpha",
                            Price = 999.99m,
                            ReleaseDate = new DateTime(2020, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 7.0
                        },
                        new
                        {
                            Id = 33,
                            BrandId = 7,
                            CategoryId = 1,
                            Description = "High-performance GT-style steering wheel.",
                            IsDeleted = false,
                            LocationId = 3,
                            Name = "Simagic GT1 Wheel",
                            Price = 499.99m,
                            ReleaseDate = new DateTime(2021, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 2.5
                        },
                        new
                        {
                            Id = 34,
                            BrandId = 7,
                            CategoryId = 5,
                            Description = "High-end loadcell pedals.",
                            IsDeleted = false,
                            LocationId = 4,
                            Name = "Simagic P2000 Pedals",
                            Price = 599.99m,
                            ReleaseDate = new DateTime(2021, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 7.0
                        },
                        new
                        {
                            Id = 35,
                            BrandId = 7,
                            CategoryId = 7,
                            Description = "High-performance sequential shifter.",
                            IsDeleted = false,
                            LocationId = 5,
                            Name = "Simagic Sequential Shifter",
                            Price = 299.99m,
                            ReleaseDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 3.0
                        },
                        new
                        {
                            Id = 36,
                            BrandId = 8,
                            CategoryId = 1,
                            Description = "High-end racing simulator cockpit.",
                            IsDeleted = false,
                            LocationId = 1,
                            Name = "Next Level Racing GTtrack",
                            Price = 899.99m,
                            ReleaseDate = new DateTime(2018, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 30.0
                        },
                        new
                        {
                            Id = 37,
                            BrandId = 8,
                            CategoryId = 1,
                            Description = "Versatile racing simulator cockpit.",
                            IsDeleted = false,
                            LocationId = 2,
                            Name = "Next Level Racing F-GT",
                            Price = 499.99m,
                            ReleaseDate = new DateTime(2017, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 25.0
                        },
                        new
                        {
                            Id = 38,
                            BrandId = 8,
                            CategoryId = 1,
                            Description = "Adjustable wheel stand for sim racing.",
                            IsDeleted = false,
                            LocationId = 3,
                            Name = "Next Level Racing Wheel Stand",
                            Price = 199.99m,
                            ReleaseDate = new DateTime(2016, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 15.0
                        },
                        new
                        {
                            Id = 39,
                            BrandId = 8,
                            CategoryId = 1,
                            Description = "Motion platform for racing simulators.",
                            IsDeleted = false,
                            LocationId = 4,
                            Name = "Next Level Racing Motion Platform",
                            Price = 2999.99m,
                            ReleaseDate = new DateTime(2019, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 40.0
                        },
                        new
                        {
                            Id = 40,
                            BrandId = 8,
                            CategoryId = 1,
                            Description = "Flight simulator cockpit.",
                            IsDeleted = false,
                            LocationId = 5,
                            Name = "Next Level Racing Flight Simulator",
                            Price = 599.99m,
                            ReleaseDate = new DateTime(2020, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 20.0
                        },
                        new
                        {
                            Id = 41,
                            BrandId = 9,
                            CategoryId = 1,
                            Description = "High-end formula-style steering wheel.",
                            IsDeleted = false,
                            LocationId = 1,
                            Name = "Cube Controls Formula Pro",
                            Price = 999.99m,
                            ReleaseDate = new DateTime(2020, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 2.0
                        },
                        new
                        {
                            Id = 42,
                            BrandId = 9,
                            CategoryId = 1,
                            Description = "High-performance GT-style steering wheel.",
                            IsDeleted = false,
                            LocationId = 2,
                            Name = "Cube Controls GT Pro",
                            Price = 899.99m,
                            ReleaseDate = new DateTime(2020, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 2.5
                        },
                        new
                        {
                            Id = 43,
                            BrandId = 9,
                            CategoryId = 1,
                            Description = "High-quality button box for sim racing.",
                            IsDeleted = false,
                            LocationId = 3,
                            Name = "Cube Controls Button Box",
                            Price = 299.99m,
                            ReleaseDate = new DateTime(2019, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 1.0
                        },
                        new
                        {
                            Id = 44,
                            BrandId = 9,
                            CategoryId = 7,
                            Description = "High-performance sequential shifter.",
                            IsDeleted = false,
                            LocationId = 4,
                            Name = "Cube Controls Sequential Shifter",
                            Price = 399.99m,
                            ReleaseDate = new DateTime(2021, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 3.0
                        },
                        new
                        {
                            Id = 45,
                            BrandId = 9,
                            CategoryId = 5,
                            Description = "High-end loadcell pedals.",
                            IsDeleted = false,
                            LocationId = 5,
                            Name = "Cube Controls Pedals",
                            Price = 599.99m,
                            ReleaseDate = new DateTime(2021, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 7.0
                        },
                        new
                        {
                            Id = 46,
                            BrandId = 10,
                            CategoryId = 6,
                            Description = "High-end direct-drive wheel base.",
                            IsDeleted = false,
                            LocationId = 1,
                            Name = "VRS DirectForce Pro",
                            Price = 999.99m,
                            ReleaseDate = new DateTime(2020, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 8.0
                        },
                        new
                        {
                            Id = 47,
                            BrandId = 10,
                            CategoryId = 5,
                            Description = "High-performance loadcell pedals.",
                            IsDeleted = false,
                            LocationId = 2,
                            Name = "VRS Pedals",
                            Price = 599.99m,
                            ReleaseDate = new DateTime(2021, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 7.0
                        },
                        new
                        {
                            Id = 48,
                            BrandId = 10,
                            CategoryId = 1,
                            Description = "High-quality steering wheel for sim racing.",
                            IsDeleted = false,
                            LocationId = 3,
                            Name = "VRS Steering Wheel",
                            Price = 499.99m,
                            ReleaseDate = new DateTime(2021, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 2.5
                        },
                        new
                        {
                            Id = 49,
                            BrandId = 10,
                            CategoryId = 7,
                            Description = "High-performance sequential shifter.",
                            IsDeleted = false,
                            LocationId = 4,
                            Name = "VRS Sequential Shifter",
                            Price = 299.99m,
                            ReleaseDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 3.0
                        },
                        new
                        {
                            Id = 50,
                            BrandId = 10,
                            CategoryId = 1,
                            Description = "High-quality button box for sim racing.",
                            IsDeleted = false,
                            LocationId = 5,
                            Name = "VRS Button Box",
                            Price = 299.99m,
                            ReleaseDate = new DateTime(2021, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 1.0
                        },
                        new
                        {
                            Id = 51,
                            BrandId = 11,
                            CategoryId = 6,
                            Description = "High-performance direct-drive wheel base.",
                            IsDeleted = false,
                            LocationId = 1,
                            Name = "Moza R9",
                            Price = 799.99m,
                            ReleaseDate = new DateTime(2021, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 7.0
                        },
                        new
                        {
                            Id = 52,
                            BrandId = 11,
                            CategoryId = 1,
                            Description = "High-quality GT-style steering wheel.",
                            IsDeleted = false,
                            LocationId = 2,
                            Name = "Moza GS Steering Wheel",
                            Price = 499.99m,
                            ReleaseDate = new DateTime(2021, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 2.5
                        },
                        new
                        {
                            Id = 53,
                            BrandId = 11,
                            CategoryId = 5,
                            Description = "High-end loadcell pedals.",
                            IsDeleted = false,
                            LocationId = 3,
                            Name = "Moza Pedals",
                            Price = 599.99m,
                            ReleaseDate = new DateTime(2021, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 7.0
                        },
                        new
                        {
                            Id = 54,
                            BrandId = 11,
                            CategoryId = 7,
                            Description = "High-performance sequential shifter.",
                            IsDeleted = false,
                            LocationId = 4,
                            Name = "Moza Sequential Shifter",
                            Price = 299.99m,
                            ReleaseDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 3.0
                        },
                        new
                        {
                            Id = 55,
                            BrandId = 11,
                            CategoryId = 1,
                            Description = "High-quality button box for sim racing.",
                            IsDeleted = false,
                            LocationId = 5,
                            Name = "Moza Button Box",
                            Price = 299.99m,
                            ReleaseDate = new DateTime(2021, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 1.0
                        });
                });

            modelBuilder.Entity("SimStop.Data.Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("FoundedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Known for their G-series racing wheels and accessories.",
                            FoundedOn = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Logitech G"
                        },
                        new
                        {
                            Id = 2,
                            Description = "A leading manufacturer of racing wheels, pedals, and accessories.",
                            FoundedOn = new DateTime(1993, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Thrustmaster"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Offers high-end sim racing equipment, including steering wheels, pedals, and seats.",
                            FoundedOn = new DateTime(2005, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Fanatec"
                        },
                        new
                        {
                            Id = 4,
                            Description = "A premium force feedback system used by professional and serious sim racers.",
                            FoundedOn = new DateTime(2015, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Simucube"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Specializes in racing simulators, seats, and stands.",
                            FoundedOn = new DateTime(2003, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Playseat"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Known for high-end loadcell pedals and other sim racing peripherals.",
                            FoundedOn = new DateTime(2010, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Heusinkveld"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Offers direct-drive wheel bases and other high-performance sim racing gear.",
                            FoundedOn = new DateTime(2018, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Simagic"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Provides a range of sim racing cockpits and accessories.",
                            FoundedOn = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Next Level Racing"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Known for high-quality sim racing steering wheels and button boxes.",
                            FoundedOn = new DateTime(2016, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cube Controls"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Offers sim racing hardware and coaching services.",
                            FoundedOn = new DateTime(2013, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "VRS (Virtual Racing School)"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Known for high-quality direct-drive wheelbases, steering wheels, and pedals.",
                            FoundedOn = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Moza Racing"
                        });
                });

            modelBuilder.Entity("SimStop.Data.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Wheel"
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Handbrake"
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Wheel Base"
                        },
                        new
                        {
                            Id = 4,
                            CategoryName = "Pedals"
                        },
                        new
                        {
                            Id = 5,
                            CategoryName = "Loadcell Pedals"
                        },
                        new
                        {
                            Id = 6,
                            CategoryName = "Direct-Drive Wheel Base"
                        },
                        new
                        {
                            Id = 7,
                            CategoryName = "Sequential Shifter"
                        },
                        new
                        {
                            Id = 8,
                            CategoryName = "H-Patern Shifter"
                        });
                });

            modelBuilder.Entity("SimStop.Data.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LocationName = "Sofia"
                        },
                        new
                        {
                            Id = 2,
                            LocationName = "Plovdiv"
                        },
                        new
                        {
                            Id = 3,
                            LocationName = "Varna"
                        },
                        new
                        {
                            Id = 4,
                            LocationName = "Burgas"
                        },
                        new
                        {
                            Id = 5,
                            LocationName = "Ruse"
                        });
                });

            modelBuilder.Entity("SimStop.Data.Models.Shop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ShopName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("TotalRevenue")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Shops");
                });

            modelBuilder.Entity("SimStop.Data.Models.ShopCustomer", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ShopId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "CustomerId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ShopId");

                    b.ToTable("ShopsCustomers");
                });

            modelBuilder.Entity("SimStop.Data.Models.ShopProduct", b =>
                {
                    b.Property<int>("ShopId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.HasKey("ShopId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ShopsProducts");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Product", b =>
                {
                    b.HasOne("SimStop.Data.Models.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimStop.Data.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimStop.Data.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Category");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("SimStop.Data.Models.Shop", b =>
                {
                    b.HasOne("SimStop.Data.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("SimStop.Data.Models.ShopCustomer", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Product", "Product")
                        .WithMany("ProductsClients")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimStop.Data.Models.Shop", "Shop")
                        .WithMany()
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("SimStop.Data.Models.ShopProduct", b =>
                {
                    b.HasOne("Product", "Product")
                        .WithMany("ShopProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimStop.Data.Models.Shop", "Shop")
                        .WithMany("ShopProducts")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("Product", b =>
                {
                    b.Navigation("ProductsClients");

                    b.Navigation("ShopProducts");
                });

            modelBuilder.Entity("SimStop.Data.Models.Shop", b =>
                {
                    b.Navigation("ShopProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
